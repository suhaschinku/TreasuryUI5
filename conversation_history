def askdatapromptgenerator(input_text: str) -> str:
    filepath = os.path.join(str(os.getenv('LOCALPATH')), "Intellibase", "prompt_querygenerator.txt")
    try:
        existing_text = read_template(filepath)
        combined_text = f"{existing_text}{input_text}. Provide only the query without any explanations and information."
        logger.debug(f"Generated query prompt for: {input_text}")
        return combined_text
    except Exception as e:
        logger.error(f"Query prompt generation failed: {str(e)}")
        raise


def read_template(filepath: str) -> str:
    """Cached template file reading"""
    try:
        with open(filepath, 'r', encoding='utf-8') as file:
            return file.read()
    except Exception as e:
        logger.error(f"Failed to read template {filepath}: {str(e)}")
        raise


 "SQL_QUERY_GENERATOR_RULES": {
    "CRITICAL_INSTRUCTION": "YOU MUST CHECK AND APPLY EVERY SINGLE RULE BELOW. DO NOT SKIP ANY RULE. EACH RULE IS MANDATORY.",
    
    "TARGET_TABLE": {
      "schema": "GENAI_EARNING_CALL_1_9N3UKNZHQ3I2CXHDJNQ9EXV58_RT",
      "table": "TREASURY_DANS_FACT_TABLE"
    },
    
    "OUTPUT_REQUIREMENT": {
      "RULE_ID": "R001",
      "RULE": "MANDATORY: Provide ONLY the SQL query as output. NO explanations, NO additional text, NO comments.
      ALWAYS ADD THIS CONDITION TO GENERATED SQL "WHERE GLB_FINAL_COUNTRY_NAME IN (select distinct VALUE from GENAI_EARNING_CALL_1_9N3UKNZHQ3I2CXHDJNQ9EXV58_RT.TREASURY_AI_DAC where USER_ID = '10.140.102.74')""
    }
